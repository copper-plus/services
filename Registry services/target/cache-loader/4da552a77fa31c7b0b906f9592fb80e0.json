{"remainingRequest":"/home/tharindu/Desktop/copper-plus-service/node_modules/thread-loader/dist/cjs.js??ref--4-2!/home/tharindu/Desktop/copper-plus-service/node_modules/ts-loader/index.js??ref--4-3!/home/tharindu/Desktop/copper-plus-service/node_modules/eslint-loader/dist/cjs.js!/home/tharindu/Desktop/copper-plus-service/src/main/webapp/app/entities/delivery/delivery.tsx","dependencies":[{"path":"/home/tharindu/Desktop/copper-plus-service/src/main/webapp/app/entities/delivery/delivery.tsx","mtime":1606121358034},{"path":"/home/tharindu/Desktop/copper-plus-service/node_modules/react-hot-loader/webpack.js","mtime":499162500000},{"path":"/home/tharindu/Desktop/copper-plus-service/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/tharindu/Desktop/copper-plus-service/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/tharindu/Desktop/copper-plus-service/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/home/tharindu/Desktop/copper-plus-service/node_modules/eslint-loader/dist/cjs.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IFJlYWN0LCB7IHVzZUVmZmVjdCB9IGZyb20gJ3JlYWN0JzsKaW1wb3J0IHsgY29ubmVjdCB9IGZyb20gJ3JlYWN0LXJlZHV4JzsKaW1wb3J0IHsgTGluayB9IGZyb20gJ3JlYWN0LXJvdXRlci1kb20nOwppbXBvcnQgeyBCdXR0b24sIFRhYmxlIH0gZnJvbSAncmVhY3RzdHJhcCc7CmltcG9ydCB7IEZvbnRBd2Vzb21lSWNvbiB9IGZyb20gJ0Bmb3J0YXdlc29tZS9yZWFjdC1mb250YXdlc29tZSc7CmltcG9ydCB7IGdldEVudGl0aWVzIH0gZnJvbSAnLi9kZWxpdmVyeS5yZWR1Y2VyJzsKZXhwb3J0IGNvbnN0IERlbGl2ZXJ5ID0gKHByb3BzKSA9PiB7CiAgICB1c2VFZmZlY3QoKCkgPT4gewogICAgICAgIHByb3BzLmdldEVudGl0aWVzKCk7CiAgICB9LCBbXSk7CiAgICBjb25zdCB7IGRlbGl2ZXJ5TGlzdCwgbWF0Y2gsIGxvYWRpbmcgfSA9IHByb3BzOwogICAgcmV0dXJuIChSZWFjdC5jcmVhdGVFbGVtZW50KCJkaXYiLCBudWxsLAogICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoImgyIiwgeyBpZDogImRlbGl2ZXJ5LWhlYWRpbmciIH0sCiAgICAgICAgICAgICJEZWxpdmVyaWVzIiwKICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChMaW5rLCB7IHRvOiBgJHttYXRjaC51cmx9L25ld2AsIGNsYXNzTmFtZTogImJ0biBidG4tcHJpbWFyeSBmbG9hdC1yaWdodCBqaC1jcmVhdGUtZW50aXR5IiwgaWQ6ICJqaC1jcmVhdGUtZW50aXR5IiB9LAogICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChGb250QXdlc29tZUljb24sIHsgaWNvbjogInBsdXMiIH0pLAogICAgICAgICAgICAgICAgIlx1MDBBMCBDcmVhdGUgbmV3IERlbGl2ZXJ5IikpLAogICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoImRpdiIsIHsgY2xhc3NOYW1lOiAidGFibGUtcmVzcG9uc2l2ZSIgfSwgZGVsaXZlcnlMaXN0ICYmIGRlbGl2ZXJ5TGlzdC5sZW5ndGggPiAwID8gKFJlYWN0LmNyZWF0ZUVsZW1lbnQoVGFibGUsIHsgcmVzcG9uc2l2ZTogdHJ1ZSB9LAogICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KCJ0aGVhZCIsIG51bGwsCiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KCJ0ciIsIG51bGwsCiAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudCgidGgiLCBudWxsLCAiSUQiKSwKICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KCJ0aCIsIG51bGwsICJOYW1lIiksCiAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudCgidGgiLCBudWxsLCAiU3RhdHVzIiksCiAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudCgidGgiLCBudWxsLCAiUmF0aW5nIiksCiAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudCgidGgiLCBudWxsLCAiRGV0YWlscyIpLAogICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoInRoIiwgbnVsbCkpKSwKICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudCgidGJvZHkiLCBudWxsLCBkZWxpdmVyeUxpc3QubWFwKChkZWxpdmVyeSwgaSkgPT4gKFJlYWN0LmNyZWF0ZUVsZW1lbnQoInRyIiwgeyBrZXk6IGBlbnRpdHktJHtpfWAgfSwKICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoInRkIiwgbnVsbCwKICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KEJ1dHRvbiwgeyB0YWc6IExpbmssIHRvOiBgJHttYXRjaC51cmx9LyR7ZGVsaXZlcnkuaWR9YCwgY29sb3I6ICJsaW5rIiwgc2l6ZTogInNtIiB9LCBkZWxpdmVyeS5pZCkpLAogICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudCgidGQiLCBudWxsLCBkZWxpdmVyeS5uYW1lKSwKICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoInRkIiwgbnVsbCwgZGVsaXZlcnkuc3RhdHVzID8gJ3RydWUnIDogJ2ZhbHNlJyksCiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KCJ0ZCIsIG51bGwsIGRlbGl2ZXJ5LnJhdGluZyksCiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KCJ0ZCIsIG51bGwsIGRlbGl2ZXJ5LmRldGFpbHMpLAogICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudCgidGQiLCB7IGNsYXNzTmFtZTogInRleHQtcmlnaHQiIH0sCiAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudCgiZGl2IiwgeyBjbGFzc05hbWU6ICJidG4tZ3JvdXAgZmxleC1idG4tZ3JvdXAtY29udGFpbmVyIiB9LAogICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KEJ1dHRvbiwgeyB0YWc6IExpbmssIHRvOiBgJHttYXRjaC51cmx9LyR7ZGVsaXZlcnkuaWR9YCwgY29sb3I6ICJpbmZvIiwgc2l6ZTogInNtIiB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChGb250QXdlc29tZUljb24sIHsgaWNvbjogImV5ZSIgfSksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAiICIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KCJzcGFuIiwgeyBjbGFzc05hbWU6ICJkLW5vbmUgZC1tZC1pbmxpbmUiIH0sICJWaWV3IikpLAogICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KEJ1dHRvbiwgeyB0YWc6IExpbmssIHRvOiBgJHttYXRjaC51cmx9LyR7ZGVsaXZlcnkuaWR9L2VkaXRgLCBjb2xvcjogInByaW1hcnkiLCBzaXplOiAic20iIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KEZvbnRBd2Vzb21lSWNvbiwgeyBpY29uOiAicGVuY2lsLWFsdCIgfSksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAiICIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KCJzcGFuIiwgeyBjbGFzc05hbWU6ICJkLW5vbmUgZC1tZC1pbmxpbmUiIH0sICJFZGl0IikpLAogICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KEJ1dHRvbiwgeyB0YWc6IExpbmssIHRvOiBgJHttYXRjaC51cmx9LyR7ZGVsaXZlcnkuaWR9L2RlbGV0ZWAsIGNvbG9yOiAiZGFuZ2VyIiwgc2l6ZTogInNtIiB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChGb250QXdlc29tZUljb24sIHsgaWNvbjogInRyYXNoIiB9KSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICIgIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoInNwYW4iLCB7IGNsYXNzTmFtZTogImQtbm9uZSBkLW1kLWlubGluZSIgfSwgIkRlbGV0ZSIpKSkpKSkpKSkpIDogKCFsb2FkaW5nICYmIFJlYWN0LmNyZWF0ZUVsZW1lbnQoImRpdiIsIHsgY2xhc3NOYW1lOiAiYWxlcnQgYWxlcnQtd2FybmluZyIgfSwgIk5vIERlbGl2ZXJpZXMgZm91bmQiKSkpKSk7Cn07CmNvbnN0IG1hcFN0YXRlVG9Qcm9wcyA9ICh7IGRlbGl2ZXJ5IH0pID0+ICh7CiAgICBkZWxpdmVyeUxpc3Q6IGRlbGl2ZXJ5LmVudGl0aWVzLAogICAgbG9hZGluZzogZGVsaXZlcnkubG9hZGluZywKfSk7CmNvbnN0IG1hcERpc3BhdGNoVG9Qcm9wcyA9IHsKICAgIGdldEVudGl0aWVzLAp9OwpleHBvcnQgZGVmYXVsdCBjb25uZWN0KG1hcFN0YXRlVG9Qcm9wcywgbWFwRGlzcGF0Y2hUb1Byb3BzKShEZWxpdmVyeSk7Cg=="},{"version":3,"file":"/home/tharindu/Desktop/copper-plus-service/src/main/webapp/app/entities/delivery/delivery.tsx","sourceRoot":"","sources":["/home/tharindu/Desktop/copper-plus-service/node_modules/eslint-loader/dist/cjs.js!/home/tharindu/Desktop/copper-plus-service/src/main/webapp/app/entities/delivery/delivery.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, RouteComponentProps } from 'react-router-dom';\nimport { Button, Col, Row, Table } from 'reactstrap';\nimport { ICrudGetAllAction } from 'react-jhipster';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport { IRootState } from 'app/shared/reducers';\nimport { getEntities } from './delivery.reducer';\nimport { IDelivery } from 'app/shared/model/delivery.model';\nimport { APP_DATE_FORMAT, APP_LOCAL_DATE_FORMAT } from 'app/config/constants';\n\nexport interface IDeliveryProps extends StateProps, DispatchProps, RouteComponentProps<{ url: string }> {}\n\nexport const Delivery = (props: IDeliveryProps) => {\n  useEffect(() => {\n    props.getEntities();\n  }, []);\n\n  const { deliveryList, match, loading } = props;\n  return (\n    <div>\n      <h2 id=\"delivery-heading\">\n        Deliveries\n        <Link to={`${match.url}/new`} className=\"btn btn-primary float-right jh-create-entity\" id=\"jh-create-entity\">\n          <FontAwesomeIcon icon=\"plus\" />\n          &nbsp; Create new Delivery\n        </Link>\n      </h2>\n      <div className=\"table-responsive\">\n        {deliveryList && deliveryList.length > 0 ? (\n          <Table responsive>\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>Name</th>\n                <th>Status</th>\n                <th>Rating</th>\n                <th>Details</th>\n                <th />\n              </tr>\n            </thead>\n            <tbody>\n              {deliveryList.map((delivery, i) => (\n                <tr key={`entity-${i}`}>\n                  <td>\n                    <Button tag={Link} to={`${match.url}/${delivery.id}`} color=\"link\" size=\"sm\">\n                      {delivery.id}\n                    </Button>\n                  </td>\n                  <td>{delivery.name}</td>\n                  <td>{delivery.status ? 'true' : 'false'}</td>\n                  <td>{delivery.rating}</td>\n                  <td>{delivery.details}</td>\n                  <td className=\"text-right\">\n                    <div className=\"btn-group flex-btn-group-container\">\n                      <Button tag={Link} to={`${match.url}/${delivery.id}`} color=\"info\" size=\"sm\">\n                        <FontAwesomeIcon icon=\"eye\" /> <span className=\"d-none d-md-inline\">View</span>\n                      </Button>\n                      <Button tag={Link} to={`${match.url}/${delivery.id}/edit`} color=\"primary\" size=\"sm\">\n                        <FontAwesomeIcon icon=\"pencil-alt\" /> <span className=\"d-none d-md-inline\">Edit</span>\n                      </Button>\n                      <Button tag={Link} to={`${match.url}/${delivery.id}/delete`} color=\"danger\" size=\"sm\">\n                        <FontAwesomeIcon icon=\"trash\" /> <span className=\"d-none d-md-inline\">Delete</span>\n                      </Button>\n                    </div>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        ) : (\n          !loading && <div className=\"alert alert-warning\">No Deliveries found</div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ delivery }: IRootState) => ({\n  deliveryList: delivery.entities,\n  loading: delivery.loading,\n});\n\nconst mapDispatchToProps = {\n  getEntities,\n};\n\ntype StateProps = ReturnType<typeof mapStateToProps>;\ntype DispatchProps = typeof mapDispatchToProps;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Delivery);\n"]}]}